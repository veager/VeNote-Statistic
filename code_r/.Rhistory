x = knots(Fn)
p = Fn(x)
plot(stepfun(x, c(0,p)))
plot.ecdf(x, add=TRUE, col='red')
x1 = c(2,1,3,4,3,4,3,5,6)
Fn <- ecdf(x)
x = knots(Fn)
p = Fn(x)
plot(stepfun(x, c(0,p)))
plot.ecdf(x1, add=TRUE, col='red')
x1 = c(2,1,3,4,3,4,3,5,6)
Fn <- ecdf(x)
x = knots(Fn)
p
plot(stepfun(x, c(0,p)))
x1 = c(2,1,3,4,3,4,3,5,6)
Fn <- ecdf(x)
x = knots(Fn)
plot(stepfun(x, c(0,p)))
plot.ecdf(x, add=TRUE, col='red')
x1 = c(2,1,3,4,3,4,3,5,6)
Fn <- ecdf(x)
x = knots(Fn)
p = Fn(x)
p
x1 = c(2,1,3,4,3,4,3,5,6)
Fn <- ecdf(x1)
x = knots(Fn)
p = Fn(x)
p
plot(stepfun(x, c(0,p)))
plot.ecdf(x, add=TRUE, col='red')
plot(stepfun(x, c(0,p)))
plot.ecdf(x1, add=TRUE, col='red')
plot.ecdf(y1, add=TRUE, col='red')
x1 = c(2,1,3,4,3,4,3,5,6)  # 样本
ecdf.x1 <- ecdf(x1)  # 构建 x1 的经验累积分布函数，ecdf.x1 为函数类型
x = knots(ecdf.x1)  # 返回样本点，从小到大排序，且不包含重复值
p = ecdf.x1(x)  # 返回 x 的累积概率 F(x)
# 绘制 ECDF 图
plot(stepfun(x, c(0,p)))
plot.ecdf(x1, add=TRUE, col='red')  # 直接根据原始样本 x1 绘制 ECDF
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.x1(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(20, mean=1, sd=1)
y2 = rnorm(40, mean=0, sd=1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.x1(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
return (D)
}
statstic.D <- function(y1, y2) {
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.x1(y1)
norm.p = cumsum(pnorm(y1))
D = max(abs(norm.p - p))
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test(y1, y2)
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.x1(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.x1(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
return (D)
}
statstic.D <- function(y1, y2) {
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
return (D)
}
statstic.D <- function(y1, y2) {
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot.ecdf(y)
plot(norm.p, col='red', add=T)
return (D)
}
statstic.D <- function(y1, y2) {
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(20, mean=1, sd=1)
print(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(100, mean=1, sd=1)
print(y1)
y2 = rnorm(40, mean=0, sd=1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
statstic.D <- function(y1, y2) {
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(100, mean=0, sd=1)
print(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(100, mean=1, sd=1)
print(y1)
y2 = rnorm(40, mean=0, sd=1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
statstic.D <- function(y1, y2) {
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(10, mean=1, sd=1)
print(y1)
y1 = rnorm(10, mean=1, sd=1)
print(y1)
y2 = rnorm(40, mean=0, sd=1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(10, mean=0.1, sd=1.1)
print(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(5, mean=0.1, sd=1.1)
print(y1)
y2 = rnorm(40, mean=0, sd=1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
d1 = max(abs())
d2 =
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
statstic.D <- function(y1, y2) {
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test(y1, y2)
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
d1 = max(abs(norm.p - p))
D = max(abs(norm.p - p))
print(norm.p)
print(p)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
d1 = max(abs(norm.p - p))
d2 = max(abs(norm.p[2:length(p)] - p[1:length(p)-1]))
D = max(d1, d2)
plot(x=y1, y=norm.p, col='red')
plot.ecdf(y, add=T)
return (D)
}
statstic.D <- function(y1, y2) {
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(10, mean=0.1, sd=1.1)
print(y1)
ks.test.norm.D <- function(y) {
ecdf.y = ecdf(y)
y1 = knots(ecdf.y)
p = ecdf.y(y1)
norm.p = pnorm(y1)
d1 = max(abs(norm.p - p))
d2 = max(abs(norm.p[2:length(p)] - p[1:length(p)-1]))
D = max(d1, d2)
# plot(x=y1, y=norm.p, col='red')
# plot.ecdf(y, add=T)
return (D)
}
statstic.D <- function(y1, y2) {
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=0, sd=1)
ecdf.y1 = ecdf(y1)
ecdf.y2 = ecdf(y2)
x = c(y1, y2)
x = c(y1, y2)
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=0, sd=1)
ecdf.y1 = ecdf(y1)
ecdf.y2 = ecdf(y2)
x = c(y1, y2)
x = sort(x)
plot(x)
x = c(y1, y2)
x = unique(sort(x))
plot(x)
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=0, sd=1)
ks.test(y1, y2)
ks.test.D(y1, y2)
ks.test.D <- function(y1, y2) {
ecdf.y1 = ecdf(y1)
ecdf.y2 = ecdf(y2)
x = c(y1, y2)
x = unique(sort(x))
n = length(x)
p1 = ecdf.y1(x)
p2 = ecdf.y2(x)
d1 = max(abs(p2 - p1))
d2 = max(abs(p2[2:n] - p1[1:n-1]))
D = max(d1, d2)
return(D)
}
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=0, sd=1)
ks.test(y1, y2)
ks.test.D(y1, y2)
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=1.1, sd=1.1)
ks.test(y1, y2)
ks.test.D(y1, y2)
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=1.1, sd=1.1)
ks.test(y1, y2)
ks.test.D(y1, y2)
ks.test.D <- function(y1, y2) {
ecdf.y1 = ecdf(y1)
ecdf.y2 = ecdf(y2)
x = c(y1, y2)
x = unique(sort(x))
n = length(x)
p1 = ecdf.y1(x)
p2 = ecdf.y2(x)
d1 = max(abs(p2 - p1))
d2 = max(abs(p2[2:n] - p1[1:n-1]))
D = max(d1, d2)
return(D)
}
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(10, mean=0.1, sd=1.1)
ks.test(y1, y2)
ks.test.D(y1, y2)
pKolSmirn(ks.test.D(y1, y2), method='Asymptotic')
library(NSM3)
pKolSmirn(ks.test.D(y1, y2), method='Asymptotic')
install.packages("NSM3")
library(NSM3)
pKolSmirn(ks.test.D(y1, y2), method='Asymptotic')
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=1.1, sd=1.1)
ks.test(y1, y2)
ks.test.D(y1, y2)
library(NSM3)
pKolSmirn(ks.test.D(y1, y2), method='Asymptotic')
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=1.1, sd=1.1)
ks.test(y1, y2)
stats.D = ks.test.D(y1, y2)
library(NSM3)
pKolSmirn(stats.D, method='Asymptotic')
pKolSmirnLSA(stats.D)
library(NSM3)
pKolSmirnLSA(stats.D)
pKolSmirn(stats.D, method='Asymptotic')
qKolSmirnLSA(0.05)
pKolSmirn(stats.D, method='Asymptotic')
qKolSmirnLSA(0.006489)
qKolSmirnLSA(0.006489)
qKolSmirn(0.006489)
pKolSmirn(y1, y2, method='Asymptotic')
qKolSmirn(0.006489)
pKolSmirn(y1, y2, method='Asymptotic')
pKolSmirn(y1, y2, method='exact')
pKolSmirn(y1, y2, method='Asymptotic')
pKolSmirn(y1, y2, method='Exact')
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=1.1, sd=1.1)
ks.test(y1, y2)
pKolSmirn(y1, y2, method='Asymptotic')
pKolSmirn(y1, y2, method='Exact')
y1 = c(0, 1, 2, 3, 3, 4, 2, 1)
ks.test(y1, y2)
stats.D = ks.test.D(y1, y2)
library(NSM3)
pKolSmirn(y1, y2, method='Asymptotic')
pKolSmirn(y1, y2, method='Exact')
pKolSmirn(y1, y2, method='Exact')
pKolSmirn(y1, y2, method='Asymptotic')
ks.test(y1, "pnorm", mean=0, sd=1)
ks.test.norm.D(y1)
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=1.1, sd=1.1)
y1 = c(0, 1, 2, 3, 3, 4, 2, 1)
ks.test(y1, y2)
stats.D = ks.test.D(y1, y2)
library(NSM3)
qKolSmirnLSA(0.006489)
qKolSmirn(0.006489)
pKolSmirn(y1, y2, method='Asymptotic')
pKolSmirn(y1, y2, method='Exact')
ks.test(y1, "pnorm", mean=0, sd=1, alternative='two.sided')
ks.test.norm.D(y1)
ks.test(y1, "pnorm", mean=0, sd=1, alternative='two.sided')
y1 = rnorm(10, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=1.1, sd=1.1)
ks.test.D <- function(y1, y2) {
ecdf.y1 = ecdf(y1)
ecdf.y2 = ecdf(y2)
x = c(y1, y2)
x = unique(sort(x))
n = length(x)
p1 = ecdf.y1(x)
p2 = ecdf.y2(x)
d1 = max(abs(p2 - p1))
d2 = max(abs(p2[2:n] - p1[1:n-1]))
D = max(d1, d2)
return(D)
}
ks.test(y1, "pnorm", mean=0, sd=1, alternative='two.sided')
ks.test.norm.D(y1)
y1 = rnorm(20, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=-0.1, sd=1.2)
ks.test(y1, "pnorm", mean=0, sd=1, alternative='two.sided')
ks.test.norm.D(y1)
ks.test(y1, y2)
stats.D = ks.test.D(y1, y2)
y1 = rnorm(20, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=-0.1, sd=1.2)
ks.test(y1, "pnorm", mean=0, sd=1, alternative='two.sided')
ks.test.norm.D(y1)
ks.test(y1, y2)
ks.test.D(y1, y2)
y1 = rnorm(20, mean=0.1, sd=1.1)
y2 = rnorm(40, mean=-0.1, sd=1.2)
# 单样本检验
ks.test(y1, "pnorm", mean=0, sd=1, alternative='two.sided')
ks.test.norm.D(y1)
# 双样本检验
ks.test(y1, y2)
ks.test.D(y1, y2)
library(NSM3)
pKolSmirn(y1, y2, method='Asymptotic')
pKolSmirn(y1, y2, method='Exact')
qKolSmirnLSA(0.006489)
